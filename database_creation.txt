-- phpMyAdmin SQL Dump
-- version 5.2.1
-- https://www.phpmyadmin.net/
--
-- Servidor: 127.0.0.1
-- Tiempo de generación: 18-07-2024 a las 21:50:44
-- Versión del servidor: 8.0.36
-- Versión de PHP: 8.2.12

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

CREATE DATABASE IF NOT EXISTS 300hs_laborales;

USE 300hs_laborales;

DELIMITER $$
--
-- Procedimientos
--
CREATE DEFINER=`root`@`localhost` PROCEDURE `activate_course` (IN `p_id_curso` INT)   BEGIN
	DECLARE p_isActive SMALLINT;
    
    SET p_isActive = 1;
    
    UPDATE cursos
    SET isActive = p_isActive
    WHERE id_curso = p_id_curso;
END$$

CREATE DEFINER=`root`@`localhost` PROCEDURE `activate_user` (IN `p_id_usuario` INT)   BEGIN
	DECLARE p_isActive SMALLINT;
    
    SET p_isActive = 1;
    
    UPDATE usuarios
    SET isActive = p_isActive
    WHERE id_usuario = p_id_usuario;
END$$

CREATE DEFINER=`root`@`localhost` PROCEDURE `create_admin_user` (IN `p_usuario` VARCHAR(255), IN `p_id_usuario` INT)   BEGIN
	INSERT INTO profesores (legajo, apellido, nombre, id_usuario, isActive)
	VALUES (0, 'administrador', p_usuario, p_id_usuario, 1);
END$$

CREATE DEFINER=`root`@`localhost` PROCEDURE `datos_curso_id` (IN `p_id_curso` INT)   BEGIN
	SELECT
    T2.id_carrera, 
    T3.carrera, 
    T2.id_anio, 
    T4.anio, 
    T2.id_materia,
    T5.materia,
    T1.id_comision,
    T6.comision, 
    T1.id_turno,
    T7.turno,
    T1.c_anio,
    T8.semestre
	FROM cursos AS T1
	INNER JOIN relaciones AS T2 ON T2.id_relacion = T1.id_relacion
	INNER JOIN carreras AS T3 ON T3.id_carrera = T2.id_carrera
	INNER JOIN anios AS T4 ON T4.id_anio = T2.id_anio
	INNER JOIN materias AS T5 ON T5.id_materia = T2.id_materia
	INNER JOIN comisiones AS T6 ON T6.id_comision = T1.id_comision
	INNER JOIN turnos AS T7 ON T7.id_turno = T1.id_turno
    INNER JOIN semestres as T8 ON T8.id_semestre = T2.id_semestre
    WHERE T1.id_curso = p_id_curso
	ORDER BY T2.id_carrera;
END$$

CREATE DEFINER=`root`@`localhost` PROCEDURE `deactivate_course` (IN `p_id_curso` INT)   BEGIN
	DECLARE p_isActive SMALLINT;
    
    SET p_isActive = 0;
    
    UPDATE cursos
    SET isActive = p_isActive
    WHERE id_curso = p_id_curso;
END$$

CREATE DEFINER=`root`@`localhost` PROCEDURE `deactivate_user` (IN `p_id_usuario` INT)   BEGIN
	DECLARE p_isActive SMALLINT;
    
    SET p_isActive = 0;
    
    UPDATE usuarios
    SET isActive = p_isActive
    WHERE id_usuario = p_id_usuario;
END$$

CREATE DEFINER=`root`@`localhost` PROCEDURE `eliminate_course` (IN `p_id_curso` INT, OUT `curso_eliminado` BOOLEAN, OUT `mensaje` VARCHAR(255))   BEGIN
    DECLARE curso_existe BOOLEAN;

    -- Llamar al procedimiento de validación
    CALL validate_curso_id(p_id_curso, curso_existe);

    -- Si el curso existe, proceder a eliminarlo
    IF curso_existe THEN
        DELETE FROM cursos 
        WHERE id_curso = p_id_curso;

        SET curso_eliminado = TRUE;
        SET mensaje = 'Curso eliminado exitosamente.';
    ELSE
        SET curso_eliminado = FALSE;
        SET mensaje = 'El curso con el ID proporcionado no existe.';
    END IF;
END$$

CREATE DEFINER=`root`@`localhost` PROCEDURE `eliminate_topic` (IN `p_id_libro_tema` INT, OUT `libro_tema_eliminado` BOOLEAN, OUT `mensaje` VARCHAR(255))   BEGIN
    DECLARE libro_tema_existe BOOLEAN;

    -- Llamar al procedimiento de validación
    CALL validate_libro_tema_id(p_id_libro_tema, libro_tema_existe);

    -- Si el libro_tema existe, proceder a eliminarlo
    IF libro_tema_existe THEN
        DELETE FROM libro_temas 
        WHERE id_libro_tema = p_id_libro_tema;

        SET libro_tema_eliminado = TRUE;
        SET mensaje = 'Tema de libro eliminado exitosamente.';
    ELSE
        SET libro_tema_eliminado = FALSE;
        SET mensaje = 'El tema de libro con el ID proporcionado no existe.';
    END IF;
END$$

CREATE DEFINER=`root`@`localhost` PROCEDURE `eliminate_user` (IN `p_id_usuario` INT, OUT `usuario_eliminado` BOOLEAN, OUT `mensaje` VARCHAR(255))   BEGIN
    DECLARE usuario_existe BOOLEAN;
    DECLARE v_id_profesor int;
    
    SELECT id_profesor INTO v_id_profesor
    FROM profesores 
    WHERE id_usuario = p_id_usuario
    LIMIT 1;

    -- Llamar al procedimiento de validación
    CALL validate_usuario_id(p_id_usuario, usuario_existe);

    -- Si el usuario existe, proceder a eliminarlo
    IF usuario_existe THEN
        DELETE FROM usuarios 
        WHERE id_usuario = p_id_usuario;
        
        UPDATE profesores
		SET id_usuario = ''
        WHERE id_usuario = p_id_usuario AND id_profesor = v_id_profesor;

        SET usuario_eliminado = TRUE;
        SET mensaje = 'Usuario eliminado exitosamente.';
    ELSE
        SET usuario_eliminado = FALSE;
        SET mensaje = 'El usuario con el ID proporcionado no existe.';
    END IF;
END$$

CREATE DEFINER=`root`@`localhost` PROCEDURE `get_anio_carrera` (IN `id_carrera_selected` INT)   BEGIN
    SELECT DISTINCT A.id_anio, A.anio
    FROM anios AS A
    INNER JOIN relaciones AS R ON R.id_anio = A.id_anio
    INNER JOIN carreras AS C ON C.id_carrera = R.id_carrera
    WHERE C.id_carrera = id_carrera_selected
    ORDER BY anio;
END$$

CREATE DEFINER=`root`@`localhost` PROCEDURE `get_comisiones` (IN `id_relacion_selected` INT, IN `id_turno_selected` INT)   BEGIN
    SELECT DISTINCT C.id_comision, COM.comision 
    FROM cursos AS C
    INNER JOIN comisiones AS COM ON COM.id_comision = C.id_comision
    WHERE C.id_relacion = id_relacion_selected AND C.id_turno = id_turno_selected
    ORDER BY COM.comision;
    
END$$

CREATE DEFINER=`root`@`localhost` PROCEDURE `get_comisiones_for_new_course` ()   BEGIN
	SELECT DISTINCT T1.id_comision, T2.comision
    FROM cursos AS T1
    INNER JOIN comisiones AS T2 ON T2.id_comision = T1.id_comision;
END$$

CREATE DEFINER=`root`@`localhost` PROCEDURE `get_curso` (IN `id_relacion_selected` INT, IN `id_turno_selected` INT, IN `id_comision_selected` INT)   BEGIN
    SELECT id_curso
    FROM cursos
    WHERE id_relacion = id_relacion_selected 
            AND id_turno = id_turno_selected
            AND id_comision = id_comision_selected;
            
END$$

CREATE DEFINER=`root`@`localhost` PROCEDURE `get_datos_curso` (IN `p_id_curso` INT)   BEGIN
	SELECT 
	T2.id_carrera,
    T4.carrera,
    T2.id_anio,
    T5.anio,
    T2.id_materia,
    T7.materia,
    descripcion,
    T2.id_semestre,
    T6.semestre,
    T1.id_turno,
    t8.turno,
    T1.c_anio,
    T1.id_comision,
    T1.id_profesor,
    T3.apellido,
    T3.nombre,
    T1.isActive
	FROM cursos AS T1
	INNER JOIN relaciones AS T2 ON T2.id_relacion = T1.id_relacion
	INNER JOIN profesores AS T3 ON T3.id_profesor = T1.id_profesor
	INNER JOIN carreras AS T4 ON T4.id_carrera = T2.id_carrera
	INNER JOIN anios AS T5 ON T5.id_anio = T2.id_anio
	INNER JOIN semestres AS T6 ON T6.id_semestre = T2.id_semestre
	INNER JOIN materias AS T7 ON T7.id_materia = T2.id_materia
	INNER JOIN turnos as T8 ON T8.id_turno = T1.id_turno
	WHERE T1.id_curso = p_id_curso;
END$$

CREATE DEFINER=`root`@`localhost` PROCEDURE `get_datos_tema` (IN `p_id_libro_tema` INT)   BEGIN
	SELECT 
		T6.carrera, 
        T7.anio,
        T9.materia,
        T4.turno,
        T5.comision,
        T20.c_anio,
        T8.semestre,
        T10.usuario,
        T3.apellido,
        T3.nombre,
        T1.fecha,
        DATE_FORMAT(T1.fecha_ingreso, '%d-%m-%Y %H:%i:%s') AS fecha_ingreso,
        DATE_FORMAT(T1.fecha_modif, '%d-%m-%Y %H:%i:%s') AS fecha_modif,
        T1.tema,
        T1.descripcion
    FROM libro_temas AS T1
    INNER JOIN cursos AS T20 ON T20.id_curso = T1.id_curso
    INNER JOIN relaciones AS T2 ON T2.id_relacion = T20.id_relacion
    INNER JOIN profesores AS T3 ON T3.id_profesor = T20.id_profesor
    INNER JOIN turnos as T4 ON T4.id_turno = T20.id_turno
    INNER JOIN comisiones as T5 ON T5.id_comision = T20.id_comision
    INNER JOIN carreras AS T6 ON T6.id_carrera = T2.id_carrera
    INNER JOIN anios AS T7 ON T7.id_anio = T2.id_anio
    INNER JOIN semestres AS T8 ON T8.id_semestre = T2.id_semestre
    INNER JOIN materias AS T9 ON T9.id_materia = T2.id_materia
    INNER JOIN usuarios AS T10 ON T10.id_usuario = T3.id_usuario
	WHERE T1.id_libro_tema = p_id_libro_tema;
END$$

CREATE DEFINER=`root`@`localhost` PROCEDURE `get_materias` (IN `id_carrera_selected` INT, IN `id_anio_carrera_selected` INT)   BEGIN
    SELECT R.id_relacion, M.materia, M.descripcion
    FROM relaciones AS R
    INNER JOIN materias AS M ON M.id_materia = R.id_materia
    WHERE R.id_carrera = id_carrera_selected
            AND R.id_anio = id_anio_carrera_selected
    ORDER BY M.materia;
    
END$$

CREATE DEFINER=`root`@`localhost` PROCEDURE `get_materias_for_new_course` (IN `id_carrera_selected` INT, IN `id_anio_carrera_selected` INT)   BEGIN
    SELECT R.id_materia, M.materia, M.descripcion
    FROM relaciones AS R
    INNER JOIN materias AS M ON M.id_materia = R.id_materia
    WHERE R.id_carrera = id_carrera_selected
            AND R.id_anio = id_anio_carrera_selected
    ORDER BY M.materia;
    
END$$

CREATE DEFINER=`root`@`localhost` PROCEDURE `get_materia_profesor_cursos` (IN `id_user` INT)   BEGIN

DECLARE fecha_actual date;

SELECT 
        T1.id_curso, 
        T1.id_profesor,
        T1.id_relacion, 
        T2.id_carrera,
        T6.nom_abreviado, 
        T2.id_anio,
        T7.anio,
        T2.id_materia,
        T9.materia,
        T1.id_comision,
        T5.comision,
        T1.id_turno,
        T4.turno,
        T8.semestre,
        T1.c_anio
    FROM cursos AS T1
    INNER JOIN relaciones AS T2 ON T2.id_relacion = T1.id_relacion
    INNER JOIN profesores AS T3 ON T3.id_profesor = T1.id_profesor
    INNER JOIN turnos as T4 ON T4.id_turno = T1.id_turno
    INNER JOIN comisiones as T5 ON T5.id_comision = T1.id_comision
    INNER JOIN carreras AS T6 ON T6.id_carrera = T2.id_carrera
    INNER JOIN anios AS T7 ON T7.id_anio = T2.id_anio
    INNER JOIN semestres AS T8 ON T8.id_semestre = T2.id_semestre
    INNER JOIN materias AS T9 ON T9.id_materia = T2.id_materia
	WHERE T3.id_usuario = id_user 
		AND T1.isActive = 1
    ORDER BY t6.nom_abreviado, T7.anio, T8.semestre, T9.materia;
END$$

CREATE DEFINER=`root`@`localhost` PROCEDURE `get_semestre` (IN `id_carrera_selected` INT, IN `id_anio_carrera_selected` INT, IN `id_materia_selected` INT)   BEGIN
SELECT S.id_semestre, S.semestre
    FROM semestres AS S
    INNER JOIN relaciones AS R ON R.id_semestre = S.id_semestre
    WHERE R.id_carrera = id_carrera_selected
            AND R.id_anio = id_anio_carrera_selected
            AND R.id_materia = id_materia_selected
    ORDER BY S.semestre; 
END$$

CREATE DEFINER=`root`@`localhost` PROCEDURE `get_turnos` (IN `id_relacion_selected` INT)   BEGIN
    SELECT DISTINCT C.id_turno, T.turno
    FROM cursos AS C
    INNER JOIN turnos AS T ON T.id_turno = C.id_turno
    WHERE C.id_relacion = id_relacion_selected
    ORDER BY T.turno;
    
END$$

CREATE DEFINER=`root`@`localhost` PROCEDURE `get_turnos_for_new_course` ()   BEGIN
    SELECT DISTINCT C.id_turno, T.turno
    FROM cursos AS C
    INNER JOIN turnos AS T ON T.id_turno = C.id_turno;
END$$

CREATE DEFINER=`root`@`localhost` PROCEDURE `get_usuarios` ()   BEGIN
SELECT 
		U.id_usuario, 
        U.usuario, 
        U.isActive, 
        U.isAdmin, 
        P.id_profesor, 
        P.legajo, 
        P.apellido, 
        P.nombre,
        P.grado, 
        P.carrera
	FROM usuarios AS U
	INNER JOIN profesores AS P ON U.id_usuario = P.id_usuario
	ORDER BY  P.apellido;
END$$

CREATE DEFINER=`root`@`localhost` PROCEDURE `insertar_libro_tema` (IN `p_id_curso` INT, IN `p_tema` NVARCHAR(255), IN `p_descripcion` NVARCHAR(255), IN `p_fecha` DATE)   BEGIN
    DECLARE v_id_profesor INT;
    DECLARE v_id_relacion INT;
    DECLARE v_fecha_ingreso DATETIME;
    
    SET v_fecha_ingreso = NOW();

    -- Obtener el id_profesor y el id_relacion asociados al id_curso proporcionado
    SELECT id_profesor, id_relacion INTO v_id_profesor, v_id_relacion
    FROM cursos
    WHERE id_curso = p_id_curso;

    -- Insertar el nuevo registro en la tabla libro_temas
    INSERT INTO libro_temas (id_curso, tema, descripcion, fecha, id_profesor, id_relacion, fecha_ingreso)
    VALUES (p_id_curso, p_tema, p_descripcion, p_fecha, v_id_profesor, v_id_relacion, v_fecha_ingreso);
END$$

CREATE DEFINER=`root`@`localhost` PROCEDURE `login` (IN `log_user` NVARCHAR(150))   BEGIN
    SELECT 
        id_usuario, 
        usuario,
        pass, 
        isActive, 
        isAdmin 
    FROM usuarios 
    WHERE usuario = log_user;
END$$

CREATE DEFINER=`root`@`localhost` PROCEDURE `modify_course` (IN `p_id_curso` INT, IN `p_id_carrera` INT, IN `p_id_anio` INT, IN `p_id_semestre` INT, IN `p_id_materia` INT, IN `p_id_comision` INT, IN `c_anio` INT, IN `p_id_profesor` INT, IN `p_id_turno` INT, IN `p_isActive` INT)   BEGIN
    DECLARE p_id_relacion INT;
    
    SELECT id_relacion INTO p_id_relacion 
    FROM relaciones 
    WHERE 
        id_carrera = p_id_carrera 
        AND id_anio = p_id_anio
        AND id_semestre = p_id_semestre
        AND id_materia = p_id_materia
    LIMIT 1;

    UPDATE cursos
    SET 
        id_relacion = p_id_relacion,
        id_comision = p_id_comision,
        id_profesor = p_id_profesor,
        id_turno = p_id_turno,
        c_anio = c_anio
    WHERE id_curso = p_id_curso;
END$$

CREATE DEFINER=`root`@`localhost` PROCEDURE `modify_topic` (IN `p_libro_tema` INT, IN `p_fecha` DATE, IN `p_tema` VARCHAR(255), IN `p_descripcion` VARCHAR(255))   BEGIN
	DECLARE v_fecha_modify DATETIME;
    
    SET v_fecha_modify = NOW();
    
    UPDATE libro_temas
    SET tema = p_tema,
        descripcion = p_descripcion,
        fecha = p_fecha,
        fecha_modif = v_fecha_modify
    WHERE id_libro_tema = p_libro_tema;
END$$

CREATE DEFINER=`root`@`localhost` PROCEDURE `modify_user_pass` (IN `p_id_user` INT, IN `p_pass` VARCHAR(250))   BEGIN
	UPDATE usuarios
    SET 
        pass = p_pass
    WHERE id_usuario = p_id_user;
END$$

CREATE DEFINER=`root`@`localhost` PROCEDURE `modify_user_user` (IN `p_id_user` INT, IN `p_usuario` VARCHAR(250), OUT `mensaje` VARCHAR(255))   BEGIN
    DECLARE usuario_existe BOOLEAN;

    -- Llama al procedimiento para validar si el usuario ya existe
    CALL validate_usuario_nombre(p_usuario, @usuario_existe);

    -- Asigna el valor de la variable de sesión a la variable local
    SET usuario_existe = @usuario_existe;

    -- Condición para verificar si el usuario ya existe
    IF usuario_existe THEN 
        SET mensaje = 'El usuario ya existe.';
    ELSE
        -- Realiza la actualización del usuario
        UPDATE usuarios
        SET 
            usuario = p_usuario
        WHERE id_usuario = p_id_user;
        SET mensaje = 'El usuario fue modificado correctamente.';
    END IF;
END$$

CREATE DEFINER=`root`@`localhost` PROCEDURE `new_course` (IN `p_id_carrera` INT, IN `p_id_anio` INT, IN `p_id_semestre` INT, IN `p_id_materia` INT, IN `p_ciclo` INT, IN `p_id_turno` INT, IN `p_id_comision` INT, IN `p_id_profesor` INT)   BEGIN
    DECLARE p_active SMALLINT DEFAULT 1;
    DECLARE p_relacion INT;

    -- Obtener el id_relacion desde la tabla relaciones
    SELECT id_relacion INTO p_relacion
    FROM relaciones 
    WHERE id_carrera = p_id_carrera 
        AND id_anio = p_id_anio 
        AND id_semestre = p_id_semestre
        AND id_materia = p_id_materia;

    -- Insertar los datos en la tabla cursos
    INSERT INTO cursos (id_relacion, id_comision, id_profesor, id_turno, isActive, c_anio)
    VALUES (p_relacion, p_id_comision, p_id_profesor, p_id_turno, p_active, p_ciclo);
END$$

CREATE DEFINER=`root`@`localhost` PROCEDURE `new_topic_admin` (IN `p_id_usuario` INT, IN `p_id_relacion` INT, IN `p_id_comision` INT, IN `p_id_turno` INT, IN `p_titulo` VARCHAR(150), IN `p_descripcion` VARCHAR(150), IN `p_fecha` DATE, OUT `p_result` VARCHAR(100))   BEGIN
    DECLARE id_profesor_admin INT;
    DECLARE p_isActive INT DEFAULT 1;
    DECLARE p_c_anio INT;
    DECLARE id_curso INT;
    DECLARE curso_existe BOOLEAN DEFAULT FALSE;
    DECLARE id_curso_out INT;

    -- Obtener id_profesor del usuario
    SELECT id_profesor INTO id_profesor_admin 
    FROM profesores 
    WHERE id_usuario = p_id_usuario
    LIMIT 1;

    IF id_profesor_admin IS NULL THEN
        SET p_result = 'Error: No se encontró el profesor asociado al usuario.';
        ROLLBACK;
    ELSE
        -- Obtener el año actual
        SET p_c_anio = YEAR(NOW());

        -- Verificar si el curso ya existe
        CALL validate_curso(p_id_relacion, p_id_comision, p_id_turno, id_profesor_admin, curso_existe, id_curso_out);
        
        IF curso_existe THEN
            -- Usar el id del curso existente
            SET id_curso = id_curso_out;
            SET p_result = 'Se ha utilizado un curso existente para insertar el tema.';
        ELSE
            -- Insertar en la tabla cursos
            INSERT INTO cursos (id_relacion, id_comision, id_profesor, id_turno, isActive, c_anio) 
            VALUES (p_id_relacion, p_id_comision, id_profesor_admin, p_id_turno, p_isActive, p_c_anio);

            -- Obtener el id del curso recién insertado
            SET id_curso = LAST_INSERT_ID();
            SET p_result = 'Se ha creado un nuevo curso y se ha insertado el tema.';
        END IF;

        -- Insertar en la tabla libro_temas
        INSERT INTO libro_temas (id_curso, tema, descripcion, fecha, id_profesor, id_relacion, fecha_ingreso) 
        VALUES (id_curso, p_titulo, p_descripcion, p_fecha, id_profesor_admin, p_id_relacion, NOW());

        COMMIT;
    END IF;
END$$

CREATE DEFINER=`root`@`localhost` PROCEDURE `new_user` (IN `p_usuario` VARCHAR(250), IN `p_pass` VARCHAR(250), IN `p_id_profesor` INT, IN `p_isAdmin` INT, OUT `usuario_creado` BOOLEAN, OUT `mensaje` VARCHAR(255))   BEGIN
    DECLARE usuario_existe BOOLEAN;
    DECLARE admin_existe BOOLEAN;
    DECLARE usuario_existe2 BOOLEAN;
    DECLARE id_user_nuevo INT;
    DECLARE id_admin_nuevo INT;

    -- Validar si el usuario ya existe
    CALL validate_usuario_nombre(p_usuario, usuario_existe);

    IF usuario_existe THEN
        SET usuario_creado = FALSE;
        SET mensaje = 'El usuario ya existe.';
    ELSE
        IF p_isAdmin = 1 THEN
			CALL validate_user_admin(p_usuario, admin_existe);
            
            IF admin_existe THEN
				SET usuario_creado = FALSE;
				SET mensaje = 'Ese nombre de usuario ya existe.';
			ELSE
				-- Insertar usuario como administrador
				INSERT INTO usuarios (usuario, pass, isActive, isAdmin) 
				VALUES (p_usuario, p_pass, 1, 1);
				-- Insertar profesor como administrador
                
                SET id_admin_nuevo = LAST_INSERT_ID();
				
                CALL create_admin_user(p_usuario, id_admin_nuevo);

				SET usuario_creado = TRUE;
				SET mensaje = 'Usuario administrador creado exitosamente.';
			END IF;
        ELSE
            CALL validate_profesor_id_user(p_id_profesor, usuario_existe2);

            IF usuario_existe2 THEN
                SET usuario_creado = FALSE;
                SET mensaje = 'El profesor ya tiene un usuario asociado.';
            ELSE
                -- Insertar usuario normal
                INSERT INTO usuarios (usuario, pass, isActive, isAdmin) 
                VALUES (p_usuario, p_pass, 1, 0);

                -- Obtener el id del usuario recién insertado
                SET id_user_nuevo = LAST_INSERT_ID();

                -- Actualizar el profesor con el id del nuevo usuario
                UPDATE profesores 
                SET id_usuario = id_user_nuevo 
                WHERE id_profesor = p_id_profesor;

                SET usuario_creado = TRUE;
                SET mensaje = 'Usuario creado exitosamente.';
            END IF;
        END IF;
    END IF;
END$$

CREATE DEFINER=`root`@`localhost` PROCEDURE `validate_curso` (IN `p_id_relacion` INT, IN `p_id_comision` INT, IN `p_id_turno` INT, IN `p_id_profesor_admin` INT, OUT `curso_existe` BOOLEAN, OUT `id_curso_out` INT)   BEGIN
    DECLARE v_id_curso INT;

    -- Verificar si existe el curso
    SELECT id_curso
    INTO v_id_curso
    FROM cursos 
    WHERE id_relacion = p_id_relacion 
      AND id_comision = p_id_comision 
      AND id_turno = p_id_turno 
      AND id_profesor = p_id_profesor_admin
    LIMIT 1;

    -- Si se encontró un curso, establecer las variables de salida en TRUE y el ID del curso
    IF v_id_curso IS NOT NULL THEN
        SET curso_existe = TRUE;
        SET id_curso_out = v_id_curso;
    ELSE
        SET curso_existe = FALSE;
        SET id_curso_out = NULL;
    END IF;
END$$

CREATE DEFINER=`root`@`localhost` PROCEDURE `validate_curso_id` (IN `p_id_curso` INT, OUT `curso_existe` BOOLEAN)   BEGIN
    DECLARE v_id_curso INT;

    -- Verificar si existe el curso
    SELECT id_curso
    INTO v_id_curso
    FROM cursos 
    WHERE id_curso = p_id_curso
    LIMIT 1;

    -- Si se encontró un curso, establecer la variable de salida en TRUE
    IF v_id_curso IS NOT NULL THEN
        SET curso_existe = TRUE;
    ELSE
        SET curso_existe = FALSE;
    END IF;
END$$

CREATE DEFINER=`root`@`localhost` PROCEDURE `validate_libro_tema_id` (IN `p_id_libro_tema` INT, OUT `libro_tema_existe` BOOLEAN)   BEGIN
    DECLARE v_id_libro_tema INT;

    -- Verificar si existe el libro_tema
    SELECT id_libro_tema
    INTO v_id_libro_tema
    FROM libro_temas 
    WHERE id_libro_tema = p_id_libro_tema
    LIMIT 1;

    -- Si se encontró un libro_tema, establecer la variable de salida en TRUE
    IF v_id_libro_tema IS NOT NULL THEN
        SET libro_tema_existe = TRUE;
    ELSE
        SET libro_tema_existe = FALSE;
    END IF;
END$$

CREATE DEFINER=`root`@`localhost` PROCEDURE `validate_profesor_id_user` (IN `p_id_profesor` INT, OUT `usuario_existe` BOOLEAN)   BEGIN
    DECLARE v_id_usuario int DEFAULT NULL;

    -- Verificar si existe el usuario
    SELECT id_usuario
    INTO v_id_usuario
    FROM profesores 
    WHERE id_profesor = p_id_profesor
    LIMIT 1;

    -- Si se encontró un usuario, establecer la variable de salida en TRUE
    IF v_id_usuario IS NOT NULL THEN
        SET usuario_existe = TRUE;
    ELSE
        SET usuario_existe = FALSE;
    END IF;
END$$

CREATE DEFINER=`root`@`localhost` PROCEDURE `validate_user_admin` (IN `p_usuario` VARCHAR(255), OUT `usuario_existe` BOOLEAN)   BEGIN
    DECLARE v_usuario VARCHAR(255) DEFAULT NULL;

    -- Verificar si existe el usuario
    SELECT usuario
    INTO v_usuario
    FROM usuarios
    WHERE usuario = p_usuario
    LIMIT 1;

    -- Si se encontró un usuario, establecer la variable de salida en TRUE
    IF v_usuario IS NOT NULL THEN
        SET usuario_existe = TRUE;
    ELSE
        SET usuario_existe = FALSE;
    END IF;
END$$

CREATE DEFINER=`root`@`localhost` PROCEDURE `validate_usuario_id` (IN `p_id_usuario` INT, OUT `usuario_existe` BOOLEAN)   BEGIN
    DECLARE v_id_usuario INT;

    -- Verificar si existe el usuario
    SELECT id_usuario
    INTO v_id_usuario
    FROM usuarios 
    WHERE id_usuario = p_id_usuario
    LIMIT 1;

    -- Si se encontró un usuario, establecer la variable de salida en TRUE
    IF v_id_usuario IS NOT NULL THEN
        SET usuario_existe = TRUE;
    ELSE
        SET usuario_existe = FALSE;
    END IF;
END$$

CREATE DEFINER=`root`@`localhost` PROCEDURE `validate_usuario_nombre` (IN `p_usuario` VARCHAR(255), OUT `usuario_existe` BOOLEAN)   BEGIN
    DECLARE v_usuario VARCHAR(255) DEFAULT NULL;

    -- Verificar si existe el usuario
    SELECT usuario
    INTO v_usuario
    FROM usuarios 
    WHERE usuario = p_usuario
    LIMIT 1;

    -- Si se encontró un usuario, establecer la variable de salida en TRUE
    IF v_usuario IS NOT NULL THEN
        SET usuario_existe = TRUE;
    ELSE
        SET usuario_existe = FALSE;
    END IF;
END$$

DELIMITER ;

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `anios`
--

CREATE TABLE `anios` (
  `id_anio` int NOT NULL,
  `anio` varchar(45) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,
  `isActive` smallint DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

--
-- Volcado de datos para la tabla `anios`
--

INSERT INTO `anios` (`id_anio`, `anio`, `isActive`) VALUES
(1, '1er Año', 1),
(2, '2do Año', 1),
(3, '3er Año', 1),
(4, '4to Año', 1),
(5, '5to Año', 1),
(99, 'NULL', 1);

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `carreras`
--

CREATE TABLE `carreras` (
  `id_carrera` int NOT NULL,
  `carrera` varchar(150) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,
  `nom_abreviado` varchar(150) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,
  `codigo_carrera` int DEFAULT NULL,
  `isActive` smallint DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

--
-- Volcado de datos para la tabla `carreras`
--

INSERT INTO `carreras` (`id_carrera`, `carrera`, `nom_abreviado`, `codigo_carrera`, `isActive`) VALUES
(1, 'Licensiatura Sistemas de Informacion', 'Lic. Sistemas', 501, 1),
(2, 'Ingenieria Informatica', 'Ing. Informatica', 502, 1),
(3, 'Tecnicatura en Programacion de Computadoras', 'Tec. Programacion', 560, 1),
(4, 'Tecnicatura en Diseño y Animacion Digital', 'Tec. Diseño, Animacion Digital', 563, 1),
(99, 'NULL', 'NULL', 99, 1);

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `comisiones`
--

CREATE TABLE `comisiones` (
  `id_comision` int NOT NULL,
  `comision` varchar(45) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

--
-- Volcado de datos para la tabla `comisiones`
--

INSERT INTO `comisiones` (`id_comision`, `comision`) VALUES
(1, 'comision 1'),
(2, 'comision 2');

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `cursos`
--

CREATE TABLE `cursos` (
  `id_curso` int NOT NULL,
  `id_relacion` int DEFAULT NULL,
  `id_comision` int DEFAULT NULL,
  `id_profesor` int DEFAULT NULL,
  `id_turno` int DEFAULT NULL,
  `isActive` int DEFAULT NULL,
  `c_anio` year DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

--
-- Volcado de datos para la tabla `cursos`
--

INSERT INTO `cursos` (`id_curso`, `id_relacion`, `id_comision`, `id_profesor`, `id_turno`, `isActive`, `c_anio`) VALUES
(1, 1, 1, 1, 3, 1, '2024'),
(2, 1, 1, 15, 3, 1, '2024'),
(3, 10, 1, 22, 3, 1, '2024'),
(4, 41, 1, 33, 1, 1, '2024'),
(5, 41, 1, 3, 1, 1, '2024'),
(6, 29, 1, 10, 1, 1, '2024'),
(7, 29, 1, 26, 1, 1, '2024'),
(8, 92, 1, 2, 3, 1, '2024'),
(9, 90, 1, 18, 3, 1, '2024'),
(10, 1, 1, 1, 1, 1, '2024'),
(11, 112, 1, 25, 3, 1, '2024'),
(12, 113, 1, 12, 1, 1, '2024'),
(13, 3, 1, 18, 3, 1, '2024'),
(14, 37, 1, 18, 2, 1, '2024'),
(15, 53, 1, 18, 2, 1, '2024'),
(17, 93, 1, 18, 3, 1, '2024'),
(18, 68, 1, 1, 1, 1, '2024'),
(19, 20, 1, 1, 3, 1, '2024'),
(20, 20, 1, 26, 3, 1, '2024'),
(39, 83, 1, 99, 3, 1, '2024'),
(40, 86, 1, 99, 3, 1, '2024'),
(41, 91, 1, 99, 3, 1, '2024'),
(42, 88, 1, 99, 3, 1, '2024'),
(43, 89, 1, 99, 3, 1, '2024'),
(44, 88, 2, 99, 3, 1, '2024'),
(45, 89, 2, 99, 3, 1, '2024'),
(46, 90, 2, 99, 1, 1, '2024'),
(47, 92, 2, 99, 1, 1, '2024'),
(48, 1, 1, 99, 3, 1, '2024'),
(49, 68, 1, 99, 1, 1, '2024'),
(50, 20, 1, 99, 3, 1, '2024'),
(128, 1, 1, 39, 1, 1, '2024');

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `libro_temas`
--

CREATE TABLE `libro_temas` (
  `id_libro_tema` int NOT NULL,
  `id_curso` int NOT NULL,
  `tema` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,
  `descripcion` varchar(255) DEFAULT NULL,
  `fecha` date DEFAULT NULL,
  `id_profesor` int DEFAULT NULL,
  `id_relacion` int DEFAULT NULL,
  `fecha_ingreso` datetime DEFAULT NULL,
  `fecha_modif` datetime DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

--
-- Volcado de datos para la tabla `libro_temas`
--

INSERT INTO `libro_temas` (`id_libro_tema`, `id_curso`, `tema`, `descripcion`, `fecha`, `id_profesor`, `id_relacion`, `fecha_ingreso`, `fecha_modif`) VALUES
(1, 18, 'Linux', 'hoy di linux terminal', '2024-05-02', 1, 68, '2024-06-06 16:42:00', NULL),
(2, 14, 'Python', 'hoy di python basico', '2024-05-02', 18, 37, '2024-06-06 16:42:00', NULL),
(3, 20, 'Java', 'En esta clase di java', '2024-05-02', 26, 20, '2024-06-06 16:42:00', NULL),
(4, 20, 'PHP', 'En esta clase di php', '2024-05-06', 26, 20, '2024-06-06 16:42:00', NULL),
(5, 20, 'C', 'En esta clase di c', '2024-06-06', 26, 20, '2024-06-06 16:42:00', NULL);

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `materias`
--

CREATE TABLE `materias` (
  `id_materia` int NOT NULL,
  `materia` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,
  `descripcion` varchar(150) DEFAULT NULL,
  `codigo_materia` varchar(150) DEFAULT NULL,
  `isActive` smallint DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

--
-- Volcado de datos para la tabla `materias`
--

INSERT INTO `materias` (`id_materia`, `materia`, `descripcion`, `codigo_materia`, `isActive`) VALUES
(1, 'Administración de las Organizaciones', '', '0050200051ADMOR', 1),
(2, 'Algebra 1', '', '0050000002ALGE1', 1),
(3, 'Algebra 2', '', '0050000005ALGE2', 1),
(4, 'Análisis Matemático 1 ', '', '0050000001AMAT1', 1),
(5, 'Análisis Matemático 2', '', '0050000006AMAT2', 1),
(6, 'Analisis Matematico 3', '', '0050000009AMAT3', 1),
(7, 'Análisis Numérico', '', '0050200025ANNUM', 1),
(8, 'Animación 1', '', '0056300034ANIM1', 1),
(9, 'Animación 2', '', '0056300037ANIM2', 1),
(10, 'Arquitectura y Organizador Computador', '', '5022010026', 1),
(11, 'Arquitecturas Avanzadas de Hardware', '', ' 0050100030ARQAH', 1),
(12, 'Autómatas y Lenguajes Formales ', '', '0050200023ALENF ', 1),
(13, 'Base de Datos', '', '0056001411BASED', 1),
(14, 'Base de Datos 1', '', '0050200019BASD1', 1),
(15, 'Base de Datos 2', '', '0050200034BDAT2', 1),
(16, 'Capacidades de las Organizaciones Sostenibles', '', 'NA', 1),
(17, 'Dibujo e Ilustración Digital', '', '0056300030DIBUD', 1),
(18, 'Dirección de Proyecto', '', '0050200039DIRPR', 1),
(19, 'Direccion de Proyectos', '', '0050100040DIREP', 1),
(20, 'Diseño de compiladores', '', '0050100029DISCO', 1),
(21, 'Diseño de Historias y Personajes', '', '0056300018DIHYP', 1),
(22, 'Diseño de la Comunicación Visual', '', '0056300033DICOM', 1),
(23, 'Diseño de Videojuegos', '', '0056300041DIVID', 1),
(24, 'Diseño Gráfico General', '', '0056300032DIGRA', 1),
(25, 'Elementos de Computacion en Red', '', 'NA', 1),
(26, 'Elementos de Economía y Finanzas', '', '0050000015ELEYF', 1),
(27, 'Elementos de Marketing', '', '0056300040ELMKT', 1),
(28, 'Fisica 1', '', '0050200003FISI1', 1),
(29, 'Física 2', '', '0050200008FISI2', 1),
(30, 'Física 3', '', '0050200017FISI3', 1),
(31, 'Fundam. de Informática', '', '0056300002FUNIN', 1),
(32, 'Fundamentos de Informática', '', '0050200004FUINF', 1),
(33, 'Gestión Estratégica de la Empresa', '', ' 0050100037GEDLE', 1),
(34, 'Habilitación Profesional A', 'Proyecto de sistemas', '0050200040HABPA', 1),
(35, 'Habiltación Profesional A', 'Proyecto de software', '0050100036HAPBA', 1),
(36, 'Habiltación Profesional B', '', '0050100039HABPB', 1),
(37, 'Habiltación Profesional B', '', '0050200042HABPB', 1),
(38, 'Ing. de Software 1', '', '0050200015INGS1', 1),
(39, 'Ing. de Software 2', '', ' 0050200021INGS2', 1),
(40, 'Ing. de Software 3', 'Arquitectura de sistemas', '0050100031INGS3', 1),
(41, 'Ing. de Software 3', 'Arquitectura de sistemas', '0050200029INGS3', 1),
(42, 'Ing. de Software 4', 'Testing y Calidad', '0050100035INGS4', 1),
(43, 'Ing. de Software 4', 'Testing y Calidad', '0050200037INGS4', 1),
(44, 'Ing. de Softwate 5', 'Ingeniería de Requerimientos', '0050100041INGS5', 1),
(45, 'Integración de Multimedios 1', '', '0056300035MULT1', 1),
(46, 'Integración de Multimedios 2', '', '0056300036MULT2', 1),
(47, 'Interac. y Experiencia de Usuario', '', '0056300039INESU', 1),
(48, 'Lenguaje    Visual 1', '', '0056300005LENV1', 1),
(49, 'Lenguaje Sonoro', '', '0056300009LENSO', 1),
(50, 'Lenguaje Visual 2', '', '0056300014LENV2', 1),
(51, 'Lenguajes de Programación ', '', '0050200035LENPR', 1),
(52, 'Lógica', '', '0050000003LOGIC', 1),
(53, 'Lógica', '', '56001401LOGIC', 1),
(54, 'Matematica Discreta', '', '0050200016MATDI', 1),
(55, 'Matemática Discreta', '', '0056001405MATED', 1),
(56, 'Medios de Representación', '', '0050200005MEDRE', 1),
(57, 'Modelos y Simulación', '', '0050200031MODYS', 1),
(58, 'Modelos y Simulación ', '', '0050100324MODYS', 1),
(59, 'MOFE', 'Interfaz Hombre-Máquina', 'TEC0100001INTHM', 1),
(60, 'MOFE', 'Gestión de Áreas de Sistemas', 'TEC0100002GESAS', 1),
(61, 'MOFE 1', 'Arquitecturas avanzadas de hardware NO01', 'TEC0200001ARADH', 1),
(62, 'MOFE 1', 'Ingeniería de requerimientos', 'TEC0200002INGRE', 1),
(63, 'MOFE 1 ', 'Interfaz Hombre-Máquina', 'TEC0200005INTHM', 1),
(64, 'MOFE 2 ', 'Sistemas Operativos Avanzados', 'TEC0200003SISOA', 1),
(65, 'MOFE 2 ', 'Gestión estratégica de la empresa', 'TEC0200004GESEE', 1),
(66, 'MOFG 1', 'Introducción al Desarrollo Sostenible', 'NA', 1),
(67, 'MOFG 1', 'Ecología', 'UB00109ECOLOG', 1),
(68, 'MOFG 1', 'Creatividad e Innovación', 'UB00201CREATINN', 1),
(69, 'MOFG 2', 'Ciencia, tecnología y sociedad', 'UB00502TECSOC', 1),
(70, 'MOFG 3', 'Emprendedorismo', 'NA', 1),
(71, 'MOFG 3', 'Capacidades de las Organizaciones Sostenibles', 'NA', 1),
(72, 'MOFG 3', 'Marketing de servicios', 'UB00303MKTSERV', 1),
(73, 'MOFG 3', 'Técnicas de Negociación ', 'UB00304TECNEGOC NO01', 1),
(74, 'MOFG 3 ', 'Marketing de Servicios ', 'UB00303MKTSERV NO02', 1),
(75, 'MOFG 4', 'Medios de Comunicación y Opinión Público', 'NA', 1),
(76, 'MOFG 4', ' Gestión y Evaluación de Emprendimientos', 'NA', 1),
(77, 'Morfología ', '', '0056300031MORFO', 1),
(78, 'Organización de Computadoras', '', '0056001403ORGFC', 1),
(79, 'Práctica Profesional 1', '', '0050000004PRAP1', 1),
(80, 'Práctica Profesional 2', 'Proyecto Construccion de Software', '0050200022PRAP2', 1),
(81, 'Probabilidad y Estadística', '', '0050000013PROBE', 1),
(82, 'Programación 1', '', '0050000008PROG1', 1),
(83, 'Programación 1', '', '0056001402PROG1', 1),
(84, 'Programación 1', '', '0056300008PROG1', 1),
(85, 'Programación 2', '', '0050000010PROG2', 1),
(86, 'Programación 2', '', '0056001406PROG2', 1),
(87, 'Programación 2', '', '0056300013PROG2', 1),
(88, 'Programación 3', '', '0050200018PROG3', 1),
(89, 'Programación 3', '', '0056001409PROG3', 1),
(90, 'Programación 3', '', '0056300019PROG3', 1),
(91, 'Programacion Ambiente de Redes', '', '0056001414PROAR', 1),
(92, 'Programacion de Base de Datos', '', '0056001415PRABD', 1),
(93, 'Proyecto Construccion de Software', '', '0056001413PROCS', 1),
(94, 'Química', '', '0050200009QUIMI', 1),
(95, 'Redes de Datos 1 ', '', '0050200030RDA1', 1),
(96, 'Redes de Datos 2', '', '0050200043RDA2', 1),
(97, 'Requisitos de Software', '', '0056001408REQUI', 1),
(98, 'Responsabilidad Legal, Profesional y Empresaria', '', '0050100038RLPYE', 1),
(99, 'Responsabilidad Legal, Profesional y Empresaria', '', '0050200044RLPY', 1),
(100, 'Seguridad Informática', '', 'NA', 1),
(101, 'Seguridad y Auditoria Informatica', '', '0050200038SEAIN', 1),
(102, 'Seguridad, Higiene y Medio Ambiente ', '', '0050200045SHYMA', 1),
(103, 'Semiología General', '', '0056300038SEMIO', 1),
(104, 'Sistemas Concurrentes', '', '0050100033SISTC', 1),
(105, 'Sistemas Concurrentes', '', '0050200032SISCO', 1),
(106, 'Sistemas Distribuidos', '', '0050100042SISTD', 1),
(107, 'Sistemas Distribuidos', '', '0050200041SISDI', 1),
(108, 'Sistemas en la Empresa', '', '0056001404SISEM', 1),
(109, 'Sistemas Inteligentes', '', '0050200036SISIN', 1),
(110, 'Sistemas Operativos', '', '0050200024SISOP', 1),
(111, 'Sistemas Operativos ', '', '0056001407AMFSO', 1),
(112, 'Sistemas Operativos Avanzados', '', '0050100034SISOA', 1),
(113, 'Taller de Trabajo Final de Carrera', '', '0050200150TRAFC', 1),
(114, 'Técnicas de negociación', '', 'UB00304TECNEGOC', 1),
(115, 'Técnicas Digitales', '', '0050200026TECDI', 1),
(116, 'Tecnologia 1', '', '0056206COMYTEC1', 1),
(117, 'Testeo y Prueba de Software', '', '0056001412TEPSW', 1),
(118, 'Trabajo Final de Carrera', '', '0050100150TRAFC', 1);

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `profesores`
--

CREATE TABLE `profesores` (
  `id_profesor` int NOT NULL,
  `legajo` int DEFAULT NULL,
  `apellido` varchar(100) DEFAULT NULL,
  `nombre` varchar(100) DEFAULT NULL,
  `grado` varchar(50) DEFAULT NULL,
  `carrera` varchar(50) DEFAULT NULL,
  `mail_comunidad` varchar(45) DEFAULT NULL,
  `mail_secundario` varchar(45) DEFAULT NULL,
  `id_usuario` varchar(45) DEFAULT NULL,
  `isActive` smallint DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

--
-- Volcado de datos para la tabla `profesores`
--

INSERT INTO `profesores` (`id_profesor`, `legajo`, `apellido`, `nombre`, `grado`, `carrera`, `mail_comunidad`, `mail_secundario`, `id_usuario`, `isActive`) VALUES
(1, 8738, 'AGUILERA', 'Sergio', 'Titular', 'IT', 'sergio.aguilera', 'sergio.aguilera@ub.edu.ar ', '2', 1),
(2, 8827, 'ALDEGANI', 'Gustavo', 'Adjunto I', 'IT', 'gustavo.aldegani', 'aldegani@arnet.com.ar', NULL, 1),
(3, 8744, 'ANGELERI', 'Paula María', 'Titular', 'IT', 'paula.angeleri', 'paula.angeleri@ub.edu.ar', NULL, 1),
(4, 16069, 'ARGOTA BICHARA', 'Maria Patricia', 'Coord. Doc.', 'IT', 'patricia.argota', '', NULL, 1),
(5, 8944, 'BLANCO', 'Miguel Angel', 'Asociado', 'IT', 'miguel.blanco', '', NULL, 1),
(6, 8943, 'BOCCATONDA', 'Carmen', 'Coord. Doc.', 'IT', 'carmen.boccatonda', '', NULL, 1),
(7, 8935, 'BREST', 'Pedro', 'Coord. Doc.', 'IT', 'pedro.brest', 'pbrest@hotmail.com', NULL, 1),
(8, 8862, 'CEBALLOS', 'Jorge Luis', 'Titular', 'IT', 'jorge.ceballos', 'ceballos001@yahoo.com.ar', NULL, 1),
(9, 30253, 'CERDA', 'Natalia Soledad', 'JTP', 'IT', 'natalia.cerda', '', NULL, 1),
(10, 8410, 'CICINELLI', 'Diana', 'Asociado', 'IT', 'diana.cicinelli', 'dcicinelli@gmail.com', NULL, 1),
(11, 8902, 'COCENTINO', 'Mariano', 'Titular', 'IT', 'mariano.cocentino', 'MSC@marianok.com.ar', NULL, 1),
(12, 8937, 'DAITTER', 'Patricia', 'Coord. Doc.', 'IT', 'patricia.daitter', 'patricia.daitter@gmail.com', NULL, 1),
(13, 14469, 'DALLOCCHIO', 'Estefanía', 'JTP', 'IT', 'estefania.dallocchio', 'estefaniadal@yahoo.com.ar', NULL, 1),
(14, 8942, 'DI FAZIO', 'Karina', 'Adj.III de Grado ', 'IT', 'karina.difazio', '', NULL, 1),
(15, 8866, 'DURÁN', 'José', 'Asociado', 'IT', 'jose.duran', 'jedo370@gmail.com', NULL, 1),
(16, 8938, 'ESTEVES', 'Carlos', 'Coord. Doc.', 'IT', 'carlos.esteves', 'carlos.esteves@mindef.gov.ar', NULL, 1),
(17, 14435, 'FERNANDEZ CROCCO', 'Gabriel', 'Adjunto I', 'IT', 'gabriel.fernandez', 'gafernandez@rocketmail.com', NULL, 1),
(18, 8239, 'GREINER', 'Laura C', 'Asociado', 'IT', 'laura.greiner', 'lgreiner@anses.gov.ar', '3', 1),
(19, 8628, 'HADAD', 'Graciela', 'Titular', 'IT', 'graciela.hadad', 'gracielahadad@gmail.com', NULL, 1),
(20, 8946, 'MARCHINI', 'jorge', 'Coord. Doc.', 'IT', 'jorge.marchini', '', NULL, 1),
(21, 14402, 'KLEINER', 'Roberto', 'Titular', 'I', 'roberto.kleiner', 'roberto.kleiner55@gmail.com', NULL, 1),
(22, 8918, 'MENAL', 'Claudio Marcelo', 'Adjunto II', 'IT', 'claudio.menal', 'marcelomenal@gmail.com', NULL, 1),
(23, 8849, 'MENGIDE', 'Juán Pablo', 'Adjunto II', 'IT', 'juanpablo.mengide', '', NULL, 1),
(24, 8873, 'MITARITONNA', 'Alejandro', 'Asociado', 'IT', 'alejandro.mitaritonna', 'alemitaritonna@gmail.com', NULL, 1),
(25, 8915, 'MOSCUZZA GUIDONI', 'Marcelo', 'Adjunto II', 'IT', 'marcelo.moscuzza', 'moscuzzama@yahoo.com', NULL, 1),
(26, 8840, 'PICCIN', 'Ana María', 'Titular', 'IT', 'ana.piccin', 'anapiccin@yahoo.com', '101', 1),
(27, 8158, 'PICCIRILLI', 'Darío', 'Titular', 'IT', 'dario.piccirilli', 'dariopiccirilli@gmail.com', NULL, 1),
(28, 14503, 'PUYOL', 'Orlando', 'Asociado', 'IT', 'orlando.puyol', 'puyol.orlando@gmail.com', NULL, 1),
(29, 21092, 'RAFFO', 'Daniela', 'JTP', 'IT', 'daniela.raffo', 'madaraf123@hotmail.com', NULL, 1),
(30, 8914, 'REINOSA', 'Enrique José', 'Titular', 'IT', 'enrique.reinosa', 'ereinosa@gmail.com', '202', 1),
(31, 8901, 'SEBASTIAN', 'Alberto', 'Adjunto III', 'IT', 'sebastian.alberto', 'asebastian@outlook.com.ar', NULL, 1),
(32, 8947, 'SECATORE', 'Miguel', 'Coord. Doc.', 'IT', 'miguela.secatore', '', NULL, 1),
(33, 8809, 'TITIOSKY', 'Rolando', 'Titular', 'IT', 'rolando.titiosky', 'rolando.titiosky@gmail.com', NULL, 1),
(34, 8871, 'TORO', 'Juán Roberto', 'Adjunto III', 'IT', 'juan.toro', 'j_r_toro@hotmail.com', NULL, 1),
(35, 8843, 'TOZZI', 'Adrián Horacio', 'Asociado', 'IT', 'adrian.tozzi', '', NULL, 1),
(36, 30313, 'ZAMBRANA', 'Maria Guillermina', 'JTP', 'IT', 'guillermina.zambrana', '', NULL, 1),
(37, 14523, 'GORGAL', 'Macarena', 'Coord. Doc.', 'IT', 'macarena.gorgal', '', NULL, 1),
(38, 21091, 'PRIETO', 'Patricia', 'Adjunto II', 'IT', 'patricia.prieto', 'patriciaeugeniaprieto@gmail.com', NULL, 1),
(39, 0, 'administrador', 'admin', '', '', '', '', '1', 1),
(99, 410, 'Mendoza', 'Tomas', 'Estudiante', 'IT', 'mendoza.tomas', 'tgmendoza@outlook.com', '99', 1);

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `relaciones`
--

CREATE TABLE `relaciones` (
  `id_relacion` int NOT NULL,
  `id_carrera` int DEFAULT NULL,
  `id_anio` int DEFAULT NULL,
  `id_semestre` int DEFAULT NULL,
  `id_materia` int DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

--
-- Volcado de datos para la tabla `relaciones`
--

INSERT INTO `relaciones` (`id_relacion`, `id_carrera`, `id_anio`, `id_semestre`, `id_materia`) VALUES
(1, 1, 4, 1, 11),
(2, 1, 5, 1, 19),
(3, 1, 4, 2, 20),
(4, 1, 4, 2, 33),
(5, 1, 4, 2, 35),
(6, 1, 5, 1, 36),
(7, 1, 4, 1, 40),
(8, 1, 4, 1, 42),
(9, 1, 5, 1, 44),
(10, 1, 4, 1, 58),
(11, 1, 5, 1, 59),
(12, 1, 5, 1, 60),
(13, 1, 4, 1, 71),
(14, 1, 4, 1, 72),
(15, 1, 4, 1, 98),
(16, 1, 4, 1, 104),
(17, 1, 5, 1, 106),
(18, 1, 4, 2, 112),
(19, 1, 4, 1, 114),
(20, 1, 5, 1, 118),
(21, 2, 4, 1, 1),
(22, 2, 1, 1, 2),
(23, 2, 1, 2, 3),
(24, 2, 1, 1, 4),
(25, 2, 1, 2, 5),
(26, 2, 2, 1, 6),
(27, 2, 3, 2, 7),
(28, 2, 3, 2, 10),
(29, 2, 3, 1, 12),
(30, 2, 2, 2, 14),
(31, 2, 4, 2, 15),
(32, 2, 5, 1, 18),
(33, 2, 3, 1, 26),
(34, 2, 1, 1, 28),
(35, 2, 1, 2, 29),
(36, 2, 2, 2, 30),
(37, 2, 1, 1, 32),
(38, 2, 5, 1, 34),
(39, 2, 5, 2, 37),
(40, 2, 2, 1, 38),
(41, 2, 3, 1, 39),
(42, 2, 4, 1, 41),
(43, 2, 4, 2, 43),
(44, 2, 4, 2, 51),
(45, 2, 2, 1, 52),
(46, 2, 2, 2, 54),
(47, 2, 1, 1, 56),
(48, 2, 4, 1, 57),
(49, 2, 3, 2, 66),
(50, 2, 3, 2, 67),
(51, 2, 3, 2, 68),
(52, 2, 3, 2, 69),
(53, 2, 1, 2, 79),
(54, 2, 3, 1, 80),
(55, 2, 3, 1, 81),
(56, 2, 1, 2, 82),
(57, 2, 2, 1, 85),
(58, 2, 2, 2, 88),
(59, 2, 1, 2, 94),
(60, 2, 4, 1, 95),
(61, 2, 5, 2, 96),
(62, 2, 5, 1, 99),
(63, 2, 4, 2, 101),
(64, 2, 5, 2, 102),
(65, 2, 4, 1, 105),
(66, 2, 5, 1, 107),
(67, 2, 4, 2, 109),
(68, 2, 3, 1, 110),
(69, 2, 5, 2, 113),
(70, 2, 3, 2, 115),
(71, 2, 5, 1, 61),
(72, 2, 5, 1, 62),
(73, 2, 5, 1, 63),
(74, 2, 5, 2, 64),
(75, 2, 5, 2, 65),
(76, 2, 5, 1, 73),
(77, 2, 5, 1, 74),
(78, 2, 5, 2, 76),
(79, 2, 5, 2, 75),
(80, 3, 2, 1, 13),
(81, 3, 2, 1, 25),
(82, 3, 1, 1, 53),
(83, 3, 1, 2, 55),
(84, 3, 1, 1, 78),
(85, 3, 1, 1, 83),
(86, 3, 1, 2, 86),
(87, 3, 2, 1, 89),
(88, 3, 2, 2, 91),
(89, 3, 2, 2, 92),
(90, 3, 2, 2, 93),
(91, 3, 1, 2, 97),
(92, 3, 2, 2, 100),
(93, 3, 1, 1, 108),
(94, 3, 1, 2, 111),
(95, 3, 2, 1, 117),
(96, 4, 1, 2, 8),
(97, 4, 2, 1, 9),
(98, 4, 1, 1, 17),
(99, 4, 2, 2, 21),
(100, 4, 1, 2, 22),
(101, 4, 2, 2, 23),
(102, 4, 1, 1, 24),
(103, 4, 2, 2, 27),
(104, 4, 1, 1, 31),
(105, 4, 1, 2, 45),
(106, 4, 2, 1, 46),
(107, 4, 2, 2, 47),
(108, 4, 1, 1, 48),
(109, 4, 1, 2, 49),
(110, 4, 2, 1, 50),
(111, 4, 1, 1, 77),
(112, 4, 1, 2, 84),
(113, 4, 2, 1, 87),
(114, 4, 2, 2, 90),
(115, 4, 2, 1, 103),
(116, 99, 99, 99, 116),
(117, 99, 99, 99, 16),
(118, 99, 99, 99, 70);

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `semestres`
--

CREATE TABLE `semestres` (
  `id_semestre` int NOT NULL,
  `semestre` varchar(50) DEFAULT NULL,
  `ini_semestre` date DEFAULT NULL,
  `fin_semestre` date DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

--
-- Volcado de datos para la tabla `semestres`
--

INSERT INTO `semestres` (`id_semestre`, `semestre`, `ini_semestre`, `fin_semestre`) VALUES
(1, 'semestre 1', '2024-03-01', '2024-06-30'),
(2, 'semestre 2', '2024-07-01', '2024-12-31'),
(99, 'NULL', '9999-01-01', '9999-12-31');

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `turnos`
--

CREATE TABLE `turnos` (
  `id_turno` int NOT NULL,
  `turno` varchar(45) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

--
-- Volcado de datos para la tabla `turnos`
--

INSERT INTO `turnos` (`id_turno`, `turno`) VALUES
(1, 'Mañana'),
(2, 'Tarde'),
(3, 'Noche');

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `usuarios`
--

CREATE TABLE `usuarios` (
  `id_usuario` int NOT NULL,
  `usuario` varchar(200) DEFAULT NULL,
  `pass` varchar(250) DEFAULT NULL,
  `isActive` smallint DEFAULT NULL,
  `isAdmin` smallint DEFAULT NULL,
  `id_profesor` int DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

--
-- Volcado de datos para la tabla `usuarios`
--

INSERT INTO `usuarios` (`id_usuario`, `usuario`, `pass`, `isActive`, `isAdmin`, `id_profesor`) VALUES
(1, 'admin', '$2y$10$bmnpsuH8MbB9i9dVVTIrY.gMj5InUtGRSWaYJ6sdrDUV36J50DLUW', 1, 1, NULL),
(2, 'sergio', '$2y$10$bmnpsuH8MbB9i9dVVTIrY.gMj5InUtGRSWaYJ6sdrDUV36J50DLUW', 1, 0, NULL),
(3, 'laura', '$2y$10$bmnpsuH8MbB9i9dVVTIrY.gMj5InUtGRSWaYJ6sdrDUV36J50DLUW', 1, 0, NULL),
(4, 'tomas', '$2y$10$5FWKKBm7ZBjp0AtiamGMx.Eob/GAT0IzrL/3ZGzRHENIwNZc475LO', 1, 0, NULL),
(5, 'nacho', '$2y$10$niy/bLFKA2EIjj6dLLkKmugrNmdV0pspRCqTPsasc6yvxaujNP4Qq', 1, 0, NULL),
(6, 'gustavo', '$2y$10$bmnpsuH8MbB9i9dVVTIrY.gMj5InUtGRSWaYJ6sdrDUV36J50DLUW', 1, 0, NULL),
(99, 'tomy', '$2y$10$Es3S/MV9ztshDj3VrgZu6u3IC4GhR38Hih2Ca1tQnpnwMNysu7o82', 1, 0, NULL),
(100, 'agus', '$2y$10$zOfcBfEFyTMIjU04Q7epJeGA0/ez1soaPCL9ekQJBBtiz21TZLc.C', 1, 0, NULL),
(101, 'piccin', '$2y$10$bmnpsuH8MbB9i9dVVTIrY.gMj5InUtGRSWaYJ6sdrDUV36J50DLUW', 1, 0, NULL);

--
-- Índices para tablas volcadas
--

--
-- Indices de la tabla `anios`
--
ALTER TABLE `anios`
  ADD PRIMARY KEY (`id_anio`);

--
-- Indices de la tabla `carreras`
--
ALTER TABLE `carreras`
  ADD PRIMARY KEY (`id_carrera`);

--
-- Indices de la tabla `comisiones`
--
ALTER TABLE `comisiones`
  ADD PRIMARY KEY (`id_comision`);

--
-- Indices de la tabla `cursos`
--
ALTER TABLE `cursos`
  ADD PRIMARY KEY (`id_curso`);

--
-- Indices de la tabla `libro_temas`
--
ALTER TABLE `libro_temas`
  ADD PRIMARY KEY (`id_libro_tema`);

--
-- Indices de la tabla `materias`
--
ALTER TABLE `materias`
  ADD PRIMARY KEY (`id_materia`);

--
-- Indices de la tabla `profesores`
--
ALTER TABLE `profesores`
  ADD PRIMARY KEY (`id_profesor`);

--
-- Indices de la tabla `relaciones`
--
ALTER TABLE `relaciones`
  ADD PRIMARY KEY (`id_relacion`);

--
-- Indices de la tabla `semestres`
--
ALTER TABLE `semestres`
  ADD PRIMARY KEY (`id_semestre`);

--
-- Indices de la tabla `turnos`
--
ALTER TABLE `turnos`
  ADD PRIMARY KEY (`id_turno`);

--
-- Indices de la tabla `usuarios`
--
ALTER TABLE `usuarios`
  ADD PRIMARY KEY (`id_usuario`);

--
-- AUTO_INCREMENT de las tablas volcadas
--

--
-- AUTO_INCREMENT de la tabla `cursos`
--
ALTER TABLE `cursos`
  MODIFY `id_curso` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=129;

--
-- AUTO_INCREMENT de la tabla `libro_temas`
--
ALTER TABLE `libro_temas`
  MODIFY `id_libro_tema` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=40;

--
-- AUTO_INCREMENT de la tabla `profesores`
--
ALTER TABLE `profesores`
  MODIFY `id_profesor` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=105;

--
-- AUTO_INCREMENT de la tabla `usuarios`
--
ALTER TABLE `usuarios`
  MODIFY `id_usuario` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=212;
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
